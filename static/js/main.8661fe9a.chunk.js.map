{"version":3,"sources":["components/GameCard.js","components/SearchGames.js","App.js","reportWebVitals.js","index.js"],"names":["GameCard","props","game","className","src","background_image","alt","name","released","rating","SearchGames","useState","query","setQuery","games","setGames","searchGames","e","a","preventDefault","url","fetch","res","json","data","console","log","results","platforms","platform","onSubmit","htmlFor","type","placeholder","value","onChange","target","filter","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAiBeA,EAfE,SAACC,GAAW,IAClBC,EAAQD,EAARC,KACP,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAcC,IAAKF,EAAKG,iBAAkBC,IAAKJ,EAAKK,KAAO,WAC1E,sBAAKJ,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAKK,OAClC,4BAAG,mDAAsBL,EAAKM,cAC9B,4BAAG,6CAAgBN,EAAKO,mBCiCzBC,EAxCK,WAAO,IAAD,EAEIC,mBAAS,IAFb,mBAEfC,EAFe,KAERC,EAFQ,OAGIF,mBAAS,IAHb,mBAGfG,EAHe,KAGRC,EAHQ,KAKhBC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAChBD,EAAEE,iBACU,mCACNC,EAHU,4CAEJ,mCAFI,mBAG+CR,GAH/C,kBAMMS,MAAMD,GANZ,cAMNE,EANM,gBAOOA,EAAIC,OAPX,OAONC,EAPM,OAQZC,QAAQC,IAAIF,EAAKG,SACjBF,QAAQC,IAAIF,EAAKG,QAAQ,GAAGC,UAAU,GAAGC,SAAStB,MAGlDQ,EAASS,EAAKG,SAZF,kDAcZF,QAAQC,IAAR,MAdY,0DAAH,sDAkBjB,OACI,gCACI,uBAAMvB,UAAU,OAAO2B,SAAUd,EAAjC,UACI,uBAAOb,UAAU,QAAQ4B,QAAQ,QAAjC,uBACA,uBAAO5B,UAAU,QAAQ6B,KAAK,OAAOzB,KAAK,QAAQ0B,YAAY,qBAAqBC,MAAOtB,EACtFuB,SAAU,SAAClB,GAAD,OAAOJ,EAASI,EAAEmB,OAAOF,UACvC,wBAAQF,KAAK,SAAS7B,UAAU,SAAhC,uBAEJ,qBAAKA,UAAU,YAAf,SACKW,EAAMuB,QAAO,SAAAnC,GAAI,OAAIA,EAAKG,oBAAkBiC,KAAI,SAAApC,GAAI,OACjD,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKqC,a,MCtBrCC,MATf,WACE,OACE,sBAAKrC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qCACA,cAAC,EAAD,QCGSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8661fe9a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst GameCard = (props) => {\r\n    const {game} = props;\r\n    return (\r\n        <div className=\"card\" >\r\n            <img className=\"card--image\" src={game.background_image} alt={game.name + 'poster'} />\r\n            <div className=\"card--content\">\r\n                <h3 className=\"card--title\">{game.name}</h3>\r\n                <p><small>Release Date: {game.released}</small></p>\r\n                <p><small>Rating: {game.rating}</small></p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameCard\r\n","import React, { useState } from 'react'\r\nimport GameCard from './GameCard'\r\n\r\nconst SearchGames = () => {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [games, setGames] = useState([]);\r\n\r\n    const searchGames = async (e) => {\r\n        e.preventDefault();\r\n        const key = \"7dffe120d4f446aeb8adff6cc3f1082b\"\r\n        const url = `https://api.rawg.io/api/games?key=${key}&search=${query}`\r\n\r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            console.log(data.results)\r\n            console.log(data.results[1].platforms[0].platform.name)\r\n\r\n        \r\n            setGames(data.results)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={searchGames}>\r\n                <label className=\"label\" htmlFor=\"query\" >Game Name</label>\r\n                <input className=\"input\" type=\"text\" name=\"query\" placeholder=\"i.e. Final Fantasy\" value={query}\r\n                    onChange={(e) => setQuery(e.target.value)} />\r\n                <button type=\"submit\" className=\"button\">Search</button>\r\n            </form>\r\n            <div className=\"card-list\">\r\n                {games.filter(game => game.background_image).map(game => (\r\n                    <GameCard game={game} key={game.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchGames\r\n\r\n\r\n","import React from 'react';\nimport SearchGames from './components/SearchGames'\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">React Video Game Search</h1>\n      <SearchGames />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}